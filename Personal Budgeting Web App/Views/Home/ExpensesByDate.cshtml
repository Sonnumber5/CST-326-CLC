@model Personal_Budgeting_Web_App.Models.MonthlyExpenseModel

@{
    // Generates a Month Year string
    // Changed model to include the selected month/year

    string dateString = $"{(ExpenseModel.MonthNames)(Model.Date.Month - 1)} {Model.Date.Year}";

    int previousMonth = Model.Date.Month - 1,
        previousYear = Model.Date.Year,
        nextMonth = Model.Date.Month + 1,
        nextYear = Model.Date.Year,
        collapseIndex = 1;

    if (previousMonth == 0)
    {
        previousYear--;
        previousMonth = 12;
    }
    if (nextMonth == 13)
    {
        nextYear++;
        nextMonth = 1;
    }

    SortedList<string, List<ExpenseModel>> sortedList = new SortedList<string, List<ExpenseModel>>();
    SortedList<string, decimal> categorizedExpenses = new SortedList<string, decimal>();

    foreach (ExpenseModel model in Model.Expenses)
    {
        if (!sortedList.ContainsKey(model.Category))
            sortedList[model.Category] = new List<ExpenseModel>();
        sortedList[model.Category].Add(model);

        if (!categorizedExpenses.ContainsKey(model.Category))
            categorizedExpenses[model.Category] = 0m;
        categorizedExpenses[model.Category] += model.Price;
    }

    // Calculate the total expenses for the month
    decimal totalSpent = Model.TotalMonthlyExpenses;

}

<style>
    .seamless-class {
        border: 0px;
        padding: 0px 0px 0px 0px;
    }

    .category-button {
        background-color: gainsboro;
    }

</style>

<div class="d-flex">
    <h3 class="flex-fill">@dateString</h3>
    @Html.Partial("Filters", new ExpenseModel())
    <a href="AddExpense"><img src="~/img/add.png"></a>
</div>
<div class="d-flex">
    <h5 class="flex-fill">Total Spent This Month: @Model.TotalMonthlyExpenses.ToString("C")</h5>
</div>
<div class="d-flex">
    <button class="flex-fill align-self-start seamless-class" onclick="getmonth(@previousMonth, @previousYear)"><h5>Previous Month</h5></button>
    <button class="flex-fill align-self-end seamless-class" onclick="getmonth(@nextMonth, @nextYear)"><h5>Next Month</h5></button>
</div>

<div>
    @foreach (KeyValuePair<string, List<ExpenseModel>> kvp in sortedList)
    {
        string id = $"collapsible{collapseIndex}";
        decimal categorySpent = categorizedExpenses[kvp.Key];
        decimal percentage = totalSpent > 0 ? (categorySpent / totalSpent) * 100 : 0;

        <div class="d-flex">
            <button class="btn btn-primary flex-fill category-button" type="button" data-bs-toggle="collapse" data-bs-target="#@id" aria-expanded="false" aria-controls="@id">
                @kvp.Key
            </button>
            <p style="width: 30%; padding-left: 10px;">
                Category Spending: @categorySpent.ToString("C")
                <span style="padding-left: 10px;">(@percentage.ToString("0.00")%)</span>
            </p>
        </div>

        <div style="min-height: 5px;">
            <div class="collapse collapse-vertical" id="@id">
                <div class="card card-body" style="width: 100%;">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Price
                                </th>
                                <th>
                                    Category
                                </th>
                                <th>
                                    Date
                                </th>
                                <th>
                                    Description
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        @foreach (ExpenseModel expense in kvp.Value)
                        {
                            bool essential = expense.Essential;
                            @Html.Raw("<tbody " + (essential ? "class=\"essential\"" : "") + ">");
                            
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => expense.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => expense.Price)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => expense.Category)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => expense.Date)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => expense.Description)
                                    </td>
                                </tr>
                            @Html.Raw("</tbody>");
                        }
                    </table>
                </div>
            </div>
        </div>
        collapseIndex++;
    }
</div>
